package Coding;
import java.util.*;
public class Merge2sortedList {
public static class ListNode{
	int val;
	ListNode next;
	ListNode(int val){
		this.val=val;
	}
}
public static ListNode mergeTwoLists(ListNode list1, ListNode list2) {
    // Create a dummy node to act as the start of the merged list
    ListNode temp = new ListNode(-1);
    ListNode current = temp;

    // Traverse both lists and append the smaller node to the merged list
    while (list1 != null && list2 != null) {
        if (list1.val <= list2.val) {
            current.next = list1;
            list1 = list1.next;
        } else {
            current.next = list2;
            list2 = list2.next;
        }
        current = current.next;
    }

    // If any nodes remain in either list, append them
    if (list1 != null) {
        current.next = list1;
    } else if (list2 != null) {
        current.next = list2;
    }

    // Return the merged list, starting from the node after the dummy
    return temp.next;
}
public static void main(String[] args) {
		

        // Create first sorted list: 1 -> 3 -> 5
        ListNode list1 = new ListNode(1);
        list1.next = new ListNode(3);
        list1.next.next = new ListNode(5);

        // Create second sorted list: 2 -> 4 -> 6
        ListNode list2 = new ListNode(2);
        list2.next = new ListNode(4);
        list2.next.next = new ListNode(6);

        // Merge both lists
        ListNode mergedList = mergeTwoLists(list1, list2);

        // Print the merged list
        ListNode current = mergedList;
        while (current != null) {
            System.out.print(current.val + " -> ");
            current = current.next;
        }
        System.out.println("null");
    }
}
